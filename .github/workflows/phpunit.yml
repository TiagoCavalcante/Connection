name: PHPUnit

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: validate composer.json and composer.lock
      run: composer validate

    - name: remove vendor folder
      run: rm -rf vendor

    - name: install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: create MySQL.env.php file
      env:
        database: ${{ secrets.MYSQL_DATABASE }}
        host: ${{ secrets.MYSQL_HOST }}
        password: ${{ secrets.MYSQL_PASSWORD }}
        port: ${{ secrets.MYSQL_PORT }}
        user: ${{ secrets.MYSQL_USER }}
      run: echo "<?php putenv('name=MySQL'); putenv('host=$host'); putenv('user=$user'); putenv('password=$password'); putenv('database=$database'); putenv('port=$port');" > MySQL.env.php

    - name: create PgSQL.env.php file
      env:
        database: ${{ secrets.PGSQL_DATABASE }}
        host: ${{ secrets.PGSQL_HOST }}
        password: ${{ secrets.PGSQL_PASSWORD }}
        port: ${{ secrets.PGSQL_PORT }}
        user: ${{ secrets.PGSQL_USER }}
      run: echo "<?php putenv('name=PgSQL'); putenv('host=$host'); putenv('user=$user'); putenv('password=$password'); putenv('database=$database'); putenv('port=$port');" > PgSQL.env.php
      
    - name: create SQLite.env.php file
      env:
        database: 'database.sqlite3'
      run: echo "<?php putenv('name=SQLite'); putenv('database=$database');" > SQLite.env.php

    - name: grant permission to run tests
      run: chmod +x tests.sh

    - name: run tests
      run: ./tests.sh